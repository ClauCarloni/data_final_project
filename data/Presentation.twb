<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.1014.1036                               -->
<workbook original-version='18.1' source-build='2021.2.4 (20212.21.1014.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='01. co2-concentration-long-term' inline='true' name='federated.1qhzpqk0a2j4bj1dbhyhi01n8s77' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='01. co2-concentration-long-term' name='textscan.1yuqk3f16xrk301gahud00ggqjrl'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='01. co2-concentration-long-term.csv' password='' server='' />
          </named-connection>
          <named-connection caption='02. co2' name='textscan.1go2a3u1fhciie1agiwzp1sy3805'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/claud/Downloads/data/02. co2.csv' dataRefreshTime='' directory='C:/Users/claud/Downloads/data' filename='C:/Users/claud/AppData/Local/Temp/TableauTemp/0556b5r0hnryrx1d85ivf0wewd1h/02. co2.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='03. CO2-by-source' name='textscan.1gn67ky09aseqx1gpmko30o0e159'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='03. CO2-by-source.csv' password='' server='' />
          </named-connection>
          <named-connection caption='04. new-vehicles-type-share' name='textscan.11cqo4x14kqrvv14b70jj0w7yk8j'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='04. new-vehicles-type-share.csv' password='' server='' />
          </named-connection>
          <named-connection caption='carbon-new-passenger-vehicles' name='textscan.0ky7wtu1bkamo219joxhn0mi05v2'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='carbon-new-passenger-vehicles.csv' password='' server='' />
          </named-connection>
          <named-connection caption='new-vehicles-type-area' name='textscan.1llchdh009nc6q1bnkzu01kvybim'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='new-vehicles-type-area.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1yuqk3f16xrk301gahud00ggqjrl' name='01. co2-concentration-long-term.csv' table='[C:\Users\claud\Downloads\data\01. co2-concentration-long-term#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='real' name='CO2 concentrations (NOAA, 2018)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1yuqk3f16xrk301gahud00ggqjrl' name='01. co2-concentration-long-term.csv' table='[C:\Users\claud\Downloads\data\01. co2-concentration-long-term#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='real' name='CO2 concentrations (NOAA, 2018)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 concentrations (NOAA, 2018)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 concentrations (NOAA, 2018)]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>CO2 concentrations (NOAA, 2018)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='01. co2-concentration-long-term.csv' datatype='table' name='[__tableau_internal_object_id__].[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='01. co2-concentration-long-term.csv' id='01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47'>
            <properties context=''>
              <relation connection='textscan.1yuqk3f16xrk301gahud00ggqjrl' name='01. co2-concentration-long-term.csv' table='[C:\Users\claud\Downloads\data\01. co2-concentration-long-term#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='real' name='CO2 concentrations (NOAA, 2018)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='01. co2-concentration-long-term (copy)' inline='true' name='federated.1qhzpqk0a2j4bj1dbhyhi01n8s77 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='01. co2-concentration-long-term' name='textscan.1yuqk3f16xrk301gahud00ggqjrl (copy)'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='01. co2-concentration-long-term.csv' password='' server='' />
          </named-connection>
          <named-connection caption='02. co2' name='textscan.1go2a3u1fhciie1agiwzp1sy3805 (copy)'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/claud/Downloads/data/02. co2.csv' dataRefreshTime='' directory='C:/Users/claud/Downloads/data' filename='C:/Users/claud/AppData/Local/Temp/TableauTemp/0556b5r0hnryrx1d85ivf0wewd1h/02. co2.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='03. CO2-by-source' name='textscan.1gn67ky09aseqx1gpmko30o0e159 (copy)'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='03. CO2-by-source.csv' password='' server='' />
          </named-connection>
          <named-connection caption='04. new-vehicles-type-share' name='textscan.11cqo4x14kqrvv14b70jj0w7yk8j (copy)'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='04. new-vehicles-type-share.csv' password='' server='' />
          </named-connection>
          <named-connection caption='carbon-new-passenger-vehicles' name='textscan.0ky7wtu1bkamo219joxhn0mi05v2 (copy)'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='carbon-new-passenger-vehicles.csv' password='' server='' />
          </named-connection>
          <named-connection caption='new-vehicles-type-area' name='textscan.1llchdh009nc6q1bnkzu01kvybim (copy)'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='new-vehicles-type-area.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1yuqk3f16xrk301gahud00ggqjrl (copy)' name='01. co2-concentration-long-term.csv' table='[C:\Users\claud\Downloads\data\01. co2-concentration-long-term#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='real' name='CO2 concentrations (NOAA, 2018)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1yuqk3f16xrk301gahud00ggqjrl (copy)' name='01. co2-concentration-long-term.csv' table='[C:\Users\claud\Downloads\data\01. co2-concentration-long-term#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='real' name='CO2 concentrations (NOAA, 2018)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 concentrations (NOAA, 2018)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 concentrations (NOAA, 2018)]</local-name>
            <parent-name>[01. co2-concentration-long-term.csv]</parent-name>
            <remote-alias>CO2 concentrations (NOAA, 2018)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='01. co2-concentration-long-term.csv' datatype='table' name='[__tableau_internal_object_id__].[01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='01. co2-concentration-long-term.csv' id='01. co2-concentration-long-term.csv_A0B9E56C27AC446A8CA85D78C0C75A47'>
            <properties context=''>
              <relation connection='textscan.1yuqk3f16xrk301gahud00ggqjrl (copy)' name='01. co2-concentration-long-term.csv' table='[C:\Users\claud\Downloads\data\01. co2-concentration-long-term#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='real' name='CO2 concentrations (NOAA, 2018)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='02. co2' inline='true' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='02. co2' name='textscan.0z4cfb50mcueb11dmylsl0xcli3z'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='02. co2.csv' password='' server='' />
          </named-connection>
          <named-connection caption='03. co2bysource3' name='textscan.03lo25t0cvfksg1gdf0nv0rsg77m'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='03. co2bysource3.csv' password='' server='' />
          </named-connection>
          <named-connection caption='04. new-vehicles-type-area' name='textscan.1jaj98b0hzznsz1crj9zd12hkg4t'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='04. new-vehicles-type-area.csv' password='' server='' />
          </named-connection>
          <named-connection caption='05. dutchemissions_passcars' name='textscan.1j9volz0hv6vnr1dfeq9t0g9yhnv'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='05. dutchemissions_passcars.csv' password='' server='' />
          </named-connection>
          <named-connection caption='timelineyears' name='textscan.07ef04c1vnuppy190j9be01a6fzw'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='timelineyears.txt' password='' server='' />
          </named-connection>
          <named-connection caption='06. air_quality' name='textscan.1sd8rss1798jwh1f5qo5r11skkkw'>
            <connection class='textscan' directory='C:/Users/claud/Downloads/data' filename='06. air_quality.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z4cfb50mcueb11dmylsl0xcli3z' name='02. co2.csv' table='[02. co2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='real' name='Annual CO2 emissions (per capita)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0z4cfb50mcueb11dmylsl0xcli3z' name='02. co2.csv' table='[02. co2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
              <column datatype='real' name='Annual CO2 emissions (per capita)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.03lo25t0cvfksg1gdf0nv0rsg77m' name='03. co2bysource3.csv' table='[03. co2bysource3#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='date' date-parse-format='yyyy' name='year' ordinal='0' />
              <column datatype='string' name='fuel_type' ordinal='1' />
              <column datatype='integer' name='emission' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1jaj98b0hzznsz1crj9zd12hkg4t' name='04. new-vehicles-type-area.csv' table='[04. new-vehicles-type-area#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
              <column datatype='string' name='type' ordinal='1' />
              <column datatype='integer' name='number' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1sd8rss1798jwh1f5qo5r11skkkw' name='05. dutchemissions_passcars.csv' table='[05. dutchemissions_passcars#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='year' ordinal='1' />
              <column datatype='string' name='gas' ordinal='2' />
              <column datatype='real' name='emission' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1sd8rss1798jwh1f5qo5r11skkkw' name='06. air_quality.csv' table='[06. air_quality#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='string' name='Pollutant' ordinal='2' />
              <column datatype='integer' name='Measurement' ordinal='3' />
              <column datatype='string' name='Index' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.07ef04c1vnuppy190j9be01a6fzw' name='timelineyears.txt' table='[timelineyears#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='it_IT'>
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Annual CO2 emissions (per capita)]' value='[02. co2.csv].[Annual CO2 emissions (per capita)]' />
          <map key='[Code]' value='[02. co2.csv].[Code]' />
          <map key='[Date]' value='[06. air_quality.csv].[Date]' />
          <map key='[Entity]' value='[02. co2.csv].[Entity]' />
          <map key='[F1]' value='[05. dutchemissions_passcars.csv].[F1]' />
          <map key='[Index]' value='[06. air_quality.csv].[Index]' />
          <map key='[Measurement]' value='[06. air_quality.csv].[Measurement]' />
          <map key='[Pollutant]' value='[06. air_quality.csv].[Pollutant]' />
          <map key='[Year (04. new-vehicles-type-area.csv)]' value='[04. new-vehicles-type-area.csv].[Year]' />
          <map key='[Year (06. air_quality.csv)]' value='[06. air_quality.csv].[Year]' />
          <map key='[Year (timelineyears.txt)]' value='[timelineyears.txt].[Year]' />
          <map key='[Year]' value='[02. co2.csv].[Year]' />
          <map key='[emission (05. dutchemissions_passcars.csv)]' value='[05. dutchemissions_passcars.csv].[emission]' />
          <map key='[emission]' value='[03. co2bysource3.csv].[emission]' />
          <map key='[fuel_type]' value='[03. co2bysource3.csv].[fuel_type]' />
          <map key='[gas]' value='[05. dutchemissions_passcars.csv].[gas]' />
          <map key='[number]' value='[04. new-vehicles-type-area.csv].[number]' />
          <map key='[type]' value='[04. new-vehicles-type-area.csv].[type]' />
          <map key='[year (05. dutchemissions_passcars.csv)]' value='[05. dutchemissions_passcars.csv].[year]' />
          <map key='[year]' value='[03. co2bysource3.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[02. co2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[02. co2.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[02. co2.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[02. co2.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual CO2 emissions (per capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual CO2 emissions (per capita)]</local-name>
            <parent-name>[02. co2.csv]</parent-name>
            <remote-alias>Annual CO2 emissions (per capita)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[03. co2bysource3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[03. co2bysource3.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fuel_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fuel_type]</local-name>
            <parent-name>[03. co2bysource3.csv]</parent-name>
            <remote-alias>fuel_type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emission</remote-name>
            <remote-type>20</remote-type>
            <local-name>[emission]</local-name>
            <parent-name>[03. co2bysource3.csv]</parent-name>
            <remote-alias>emission</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[04. new-vehicles-type-area.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (04. new-vehicles-type-area.csv)]</local-name>
            <parent-name>[04. new-vehicles-type-area.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[04. new-vehicles-type-area.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number]</local-name>
            <parent-name>[04. new-vehicles-type-area.csv]</parent-name>
            <remote-alias>number</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[05. dutchemissions_passcars.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[05. dutchemissions_passcars.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year (05. dutchemissions_passcars.csv)]</local-name>
            <parent-name>[05. dutchemissions_passcars.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gas]</local-name>
            <parent-name>[05. dutchemissions_passcars.csv]</parent-name>
            <remote-alias>gas</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[emission (05. dutchemissions_passcars.csv)]</local-name>
            <parent-name>[05. dutchemissions_passcars.csv]</parent-name>
            <remote-alias>emission</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[06. air_quality.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (06. air_quality.csv)]</local-name>
            <parent-name>[06. air_quality.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[06. air_quality.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollutant</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pollutant]</local-name>
            <parent-name>[06. air_quality.csv]</parent-name>
            <remote-alias>Pollutant</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measurement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measurement]</local-name>
            <parent-name>[06. air_quality.csv]</parent-name>
            <remote-alias>Measurement</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[06. air_quality.csv]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[timelineyears.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (timelineyears.txt)]</local-name>
            <parent-name>[timelineyears.txt]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column caption='Year ' datatype='date' name='[Year (04. new-vehicles-type-area.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (06. air quality.csv)' datatype='date' name='[Year (06. air_quality.csv)]' role='dimension' type='quantitative' />
      <column caption='Years' datatype='date' name='[Year (timelineyears.txt)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='02. co2.csv' datatype='table' name='[__tableau_internal_object_id__].[02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='03. co2bysource3.csv' datatype='table' name='[__tableau_internal_object_id__].[03. co2bysource3.csv_3CF29B581CBE4DF48751EC3E6FE92EC5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='04. new-vehicles-type-area.csv' datatype='table' name='[__tableau_internal_object_id__].[04. new-vehicles-type-area.csv_2C786804BDB54A76B3CA09E5A9D65CFB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='05. dutchemissions_passcars.csv' datatype='table' name='[__tableau_internal_object_id__].[05. dutchemissions_passcars.csv_E13711BE8E1342119D97A3B16355B8A5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='06. air_quality.csv' datatype='table' name='[__tableau_internal_object_id__].[06. air_quality.csv_F31042F26DFF487F8BE417B139323FBC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='timelineyears.txt' datatype='table' name='[__tableau_internal_object_id__].[timelineyears.txt_EFF7C3343E0A4DDFA7842D90EC2BCA8E]' role='measure' type='quantitative' />
      <column caption='Emission (05. Dutchemissions Passcars.Csv)' datatype='real' name='[emission (05. dutchemissions_passcars.csv)]' role='dimension' type='ordinal' />
      <column caption='Emission (Dutchemissions Passcars.Csv)' datatype='real' name='[emission (dutchemissions_passcars.csv)]' role='dimension' type='ordinal' />
      <column caption='Emission' datatype='integer' name='[emission]' role='measure' type='quantitative' />
      <column caption='Fuel Type' datatype='string' name='[fuel_type]' role='dimension' type='nominal' />
      <column caption='Gas' datatype='string' name='[gas]' role='dimension' type='nominal' />
      <column caption='Number' datatype='integer' name='[number]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Year (05. Dutchemissions Passcars.Csv)' datatype='date' name='[year (05. dutchemissions_passcars.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Dutchemissions Passcars.Csv)' datatype='date' name='[year (dutchemissions_passcars.csv)]' role='dimension' type='quantitative' />
      <column caption='Year1' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[gas]' derivation='None' name='[none:gas:nk]' pivot='key' type='nominal' />
      <column-instance column='[year (dutchemissions_passcars.csv)]' derivation='Year-Trunc' name='[tyr:year (dutchemissions_passcars.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year (timelineyears.txt)]' derivation='Year' name='[yr:Year (timelineyears.txt):ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Gas,YEAR(Year (Dutchemissions Passcars.Csv)))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:gas:nk]' />
          <groupfilter function='level-members' level='[tyr:year (dutchemissions_passcars.csv):qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:Annual CO2 emissions from cement (zero filled):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:Annual CO2 emissions from flaring (zero filled):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:Annual CO2 emissions from coal (zero filled):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Year (timelineyears.txt):ok]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>2021</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>2020</bucket>
            </map>
            <map to='#33789d'>
              <bucket>2019</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>2018</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>2017</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>2016</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>2015</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>2014</bucket>
            </map>
            <map to='#a0d4d1'>
              <bucket>2012</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gas:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;VOC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CH4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NMVOS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VOC_emission_by_combustion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NOx&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PM10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VOC_emission_by_evaporation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SO2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CO2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N2O&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:Date:ok]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>12</bucket>
            </map>
            <map to='#2e658f'>
              <bucket>11</bucket>
            </map>
            <map to='#317298'>
              <bucket>10</bucket>
            </map>
            <map to='#3480a2'>
              <bucket>9</bucket>
            </map>
            <map to='#358dac'>
              <bucket>8</bucket>
            </map>
            <map to='#3f9bb5'>
              <bucket>7</bucket>
            </map>
            <map to='#50a8bc'>
              <bucket>6</bucket>
            </map>
            <map to='#67b4c2'>
              <bucket>5</bucket>
            </map>
            <map to='#7bc0c9'>
              <bucket>4</bucket>
            </map>
            <map to='#90cbce'>
              <bucket>3</bucket>
            </map>
            <map to='#a5d7d2'>
              <bucket>2</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='02. co2.csv' id='02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C'>
            <properties context=''>
              <relation connection='textscan.0z4cfb50mcueb11dmylsl0xcli3z' name='02. co2.csv' table='[02. co2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='real' name='Annual CO2 emissions (per capita)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='03. co2bysource3.csv' id='03. co2bysource3.csv_3CF29B581CBE4DF48751EC3E6FE92EC5'>
            <properties context=''>
              <relation connection='textscan.03lo25t0cvfksg1gdf0nv0rsg77m' name='03. co2bysource3.csv' table='[03. co2bysource3#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='0' />
                  <column datatype='string' name='fuel_type' ordinal='1' />
                  <column datatype='integer' name='emission' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='04. new-vehicles-type-area.csv' id='04. new-vehicles-type-area.csv_2C786804BDB54A76B3CA09E5A9D65CFB'>
            <properties context=''>
              <relation connection='textscan.1jaj98b0hzznsz1crj9zd12hkg4t' name='04. new-vehicles-type-area.csv' table='[04. new-vehicles-type-area#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='integer' name='number' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='05. dutchemissions_passcars.csv' id='05. dutchemissions_passcars.csv_E13711BE8E1342119D97A3B16355B8A5'>
            <properties context=''>
              <relation connection='textscan.1sd8rss1798jwh1f5qo5r11skkkw' name='05. dutchemissions_passcars.csv' table='[05. dutchemissions_passcars#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='1' />
                  <column datatype='string' name='gas' ordinal='2' />
                  <column datatype='real' name='emission' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='06. air_quality.csv' id='06. air_quality.csv_F31042F26DFF487F8BE417B139323FBC'>
            <properties context=''>
              <relation connection='textscan.1sd8rss1798jwh1f5qo5r11skkkw' name='06. air_quality.csv' table='[06. air_quality#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Pollutant' ordinal='2' />
                  <column datatype='integer' name='Measurement' ordinal='3' />
                  <column datatype='string' name='Index' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='timelineyears.txt' id='timelineyears.txt_EFF7C3343E0A4DDFA7842D90EC2BCA8E'>
            <properties context=''>
              <relation connection='textscan.07ef04c1vnuppy190j9be01a6fzw' name='timelineyears.txt' table='[timelineyears#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT'>
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[year]' />
            </expression>
            <first-end-point object-id='02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C' />
            <second-end-point object-id='03. co2bysource3.csv_3CF29B581CBE4DF48751EC3E6FE92EC5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (04. new-vehicles-type-area.csv)]' />
            </expression>
            <first-end-point object-id='02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C' />
            <second-end-point object-id='04. new-vehicles-type-area.csv_2C786804BDB54A76B3CA09E5A9D65CFB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[year (05. dutchemissions_passcars.csv)]' />
            </expression>
            <first-end-point object-id='02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C' />
            <second-end-point object-id='05. dutchemissions_passcars.csv_E13711BE8E1342119D97A3B16355B8A5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (06. air_quality.csv)]' />
            </expression>
            <first-end-point object-id='02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C' />
            <second-end-point object-id='06. air_quality.csv_F31042F26DFF487F8BE417B139323FBC' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (timelineyears.txt)]' />
            </expression>
            <first-end-point object-id='02. co2.csv_D0EC1E4ED45549268A0A6B9B52CE892C' />
            <second-end-point object-id='timelineyears.txt_EFF7C3343E0A4DDFA7842D90EC2BCA8E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_B432078396F74A80B08CF1D7CABED5D2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='policies_by_year+' />
      <command command='tsc:brush'>
        <param name='field-captions' value='YEAR(Years)' />
        <param name='target' value='policies_by_year+' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Atm_global_CO2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CO2 concentration at the atmosphere</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='01. co2-concentration-long-term' name='federated.1qhzpqk0a2j4bj1dbhyhi01n8s77' />
          </datasources>
          <datasource-dependencies datasource='federated.1qhzpqk0a2j4bj1dbhyhi01n8s77'>
            <column datatype='real' name='[CO2 concentrations (NOAA, 2018)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2 concentrations (NOAA, 2018)]' derivation='Sum' name='[sum:CO2 concentrations (NOAA, 2018):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qhzpqk0a2j4bj1dbhyhi01n8s77].[sum:CO2 concentrations (NOAA, 2018):qk]</rows>
        <cols>[federated.1qhzpqk0a2j4bj1dbhyhi01n8s77].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{D371C92B-CE81-48AA-8142-41C55BEDA939}' />
    </worksheet>
    <worksheet name='air_quality'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Air quality along the year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Measurement]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pollutant]' role='dimension' type='nominal' />
            <column-instance column='[Measurement]' derivation='Avg' name='[avg:Measurement:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pollutant]' derivation='None' name='[none:Pollutant:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Pollutant:nk]'>
            <groupfilter from='&quot;no2&quot;' function='range' level='[none:Pollutant:nk]' to='&quot;pm25&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Pollutant:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[mn:Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[avg:Measurement:qk]</rows>
        <cols>([federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Pollutant:nk] / [federated.01qbnb61a672gp1ebqmcl0ed2dtl].[mn:Date:ok])</cols>
      </table>
      <simple-id uuid='{B60CF86E-42F4-44D9-8BC0-9D236168634B}' />
    </worksheet>
    <worksheet name='by_fuel_co2_emi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Co2 emissions by fuel type - Netherlands</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column caption='Emission' datatype='integer' name='[emission]' role='measure' type='quantitative' />
            <column caption='Fuel Type' datatype='string' name='[fuel_type]' role='dimension' type='nominal' />
            <column-instance column='[fuel_type]' derivation='None' name='[none:fuel_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[emission]' derivation='Sum' name='[sum:emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year1' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission:qk]' scope='rows' value='CO2 emissions (t)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:fuel_type:nk]' />
              <text column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:fuel_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission:qk]</rows>
        <cols>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{18A77EF7-BFEB-4DB3-A088-2352F3BAE19F}' />
    </worksheet>
    <worksheet name='emiss_car_type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Passenger cars emissions - Netherlands</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column-instance column='[gas]' derivation='Attribute' name='[attr:gas:nk]' pivot='key' type='nominal' />
            <column caption='Emission (05. Dutchemissions Passcars.Csv)' datatype='real' name='[emission (05. dutchemissions_passcars.csv)]' role='dimension' type='ordinal' />
            <column caption='Gas' datatype='string' name='[gas]' role='dimension' type='nominal' />
            <column-instance column='[gas]' derivation='None' name='[none:gas:nk]' pivot='key' type='nominal' />
            <column-instance column='[emission (05. dutchemissions_passcars.csv)]' derivation='Sum' name='[sum:emission (05. dutchemissions_passcars.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[year (05. dutchemissions_passcars.csv)]' derivation='Year-Trunc' name='[tyr:year (05. dutchemissions_passcars.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Year (05. Dutchemissions Passcars.Csv)' datatype='date' name='[year (05. dutchemissions_passcars.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gas:nk]' member='&quot;CH4&quot;' />
              <groupfilter function='member' level='[none:gas:nk]' member='&quot;CO&quot;' />
              <groupfilter from='&quot;N2O&quot;' function='range' level='[none:gas:nk]' to='&quot;VOC_emission_by_evaporation&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (05. dutchemissions_passcars.csv):qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission (05. dutchemissions_passcars.csv):qk]' scope='rows' value='Emissions' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]' />
              <lod column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[attr:gas:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission (05. dutchemissions_passcars.csv):qk]</rows>
        <cols>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (05. dutchemissions_passcars.csv):qk]</cols>
      </table>
      <simple-id uuid='{008E0DEC-8DA8-4AED-815D-763C3C2E161C}' />
    </worksheet>
    <worksheet name='emiss_car_typeCO2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Passenger cars emissions - Netherlands</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column caption='Emission (05. Dutchemissions Passcars.Csv)' datatype='real' name='[emission (05. dutchemissions_passcars.csv)]' role='dimension' type='ordinal' />
            <column caption='Gas' datatype='string' name='[gas]' role='dimension' type='nominal' />
            <column-instance column='[gas]' derivation='None' name='[none:gas:nk]' pivot='key' type='nominal' />
            <column-instance column='[emission (05. dutchemissions_passcars.csv)]' derivation='Sum' name='[sum:emission (05. dutchemissions_passcars.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[year (05. dutchemissions_passcars.csv)]' derivation='Year-Trunc' name='[tyr:year (05. dutchemissions_passcars.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Year (05. Dutchemissions Passcars.Csv)' datatype='date' name='[year (05. dutchemissions_passcars.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (05. dutchemissions_passcars.csv):qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission (05. dutchemissions_passcars.csv):qk]' scope='rows' value='Emission' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission (05. dutchemissions_passcars.csv):qk]</rows>
        <cols>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (05. dutchemissions_passcars.csv):qk]</cols>
      </table>
      <simple-id uuid='{ACD19169-DC10-477C-B545-C736BF41AB03}' />
    </worksheet>
    <worksheet name='new_by_type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New passenger vehicles by type - Netherlands</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column caption='Year ' datatype='date' name='[Year (04. new-vehicles-type-area.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Number' datatype='integer' name='[number]' role='dimension' type='ordinal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Year (04. new-vehicles-type-area.csv)]' derivation='Year-Trunc' name='[tyr:Year (04. new-vehicles-type-area.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (04. new-vehicles-type-area.csv)]' derivation='Year' name='[yr:Year (04. new-vehicles-type-area.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Year (04. new-vehicles-type-area.csv):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2013' />
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2014' />
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2015' />
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2016' />
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2017' />
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2018' />
              <groupfilter function='member' level='[yr:Year (04. new-vehicles-type-area.csv):ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Year (04. new-vehicles-type-area.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:number:qk]' scope='rows' value='Amount' />
            <format attr='display' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:number:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year (04. new-vehicles-type-area.csv):qk]' scope='cols' value='Year ' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:number:qk]</rows>
        <cols>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year (04. new-vehicles-type-area.csv):qk]</cols>
      </table>
      <simple-id uuid='{827E7A76-F697-4CB4-A261-A89FA12F0253}' />
    </worksheet>
    <worksheet name='per_capita_co2_emi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CO2 emissions per capita by country/region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column datatype='real' name='[Annual CO2 emissions (per capita)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual CO2 emissions (per capita)]' derivation='Sum' name='[sum:Annual CO2 emissions (per capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;World&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:Annual CO2 emissions (per capita):qk]</rows>
        <cols>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{8D5DA4D6-0D4B-4219-A36D-2903C51CBD48}' />
    </worksheet>
    <worksheet name='policies_by_year+'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Public policies by year
Considering the Ministry of Economic Affairs and Climate Policy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='02. co2' name='federated.01qbnb61a672gp1ebqmcl0ed2dtl' />
          </datasources>
          <datasource-dependencies datasource='federated.01qbnb61a672gp1ebqmcl0ed2dtl'>
            <column caption='Years' datatype='date' name='[Year (timelineyears.txt)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (timelineyears.txt)]' derivation='Count' name='[cnt:Year (timelineyears.txt):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (timelineyears.txt)]' derivation='Year' name='[yr:Year (timelineyears.txt):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[cnt:Year (timelineyears.txt):qk]' />
              <text column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Year (timelineyears.txt):ok]' />
              <color column='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Year (timelineyears.txt):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E347C2F3-17AA-458B-A57C-ACE70E81D00B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Presentation' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Amsterdam air: a climate analysis of the canals city</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='330' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone fixed-size='80' h='8299' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='84854' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14316'>
              <flipboard active-id='10' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Atmospheric CO2 concentration' captured-sheet='atm_global_CO2' id='1' />
                  <story-point caption='CO2 emission by country' captured-sheet='per_capita_co2_emi' id='2' />
                  <story-point caption='CO2 emission by fuel type' captured-sheet='by_fuel_co2_emi' id='3'>
                    <capturedDeltas>
                      <worksheet name='by_fuel_co2_emi'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:fuel_type:nk]</field>
                                  <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission:qk]</field>
                                  <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;gas&quot;</value>
                                <value>83106734</value>
                                <value>#2003-01-01 00:00:00#</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='New vehicles by fuel type' captured-sheet='new_by_type' id='4' />
                  <story-point caption='Amount public policies by year' captured-sheet='policies_by_year+' id='7' />
                  <story-point caption='Passenger cars emissions' captured-sheet='emiss_car_type' id='8' />
                  <story-point caption='Passenger cars eissions CO2' captured-sheet='emiss_car_typeCO2' id='9' />
                  <story-point caption='Air quality along the year' captured-sheet='air_quality' id='10' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{CD79958A-6853-49E4-B10B-24E7A5ED1B54}' />
    </dashboard>
    <dashboard name='atm_global_CO2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Atm_global_CO2' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='1' is-fixed='true' name='Atm_global_CO2' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7965F52F-DE60-49CA-BCC2-6ABD0764842D}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Atm_global_CO2'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qhzpqk0a2j4bj1dbhyhi01n8s77].[none:CO2 concentrations (NOAA, 2018):nk]</field>
            <field>[federated.1qhzpqk0a2j4bj1dbhyhi01n8s77].[none:Year:ok]</field>
            <field>[federated.1qhzpqk0a2j4bj1dbhyhi01n8s77].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72F08D8C-BED1-4C2D-9463-F83E11428709}' />
    </window>
    <window class='worksheet' name='per_capita_co2_emi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='282'>
            <card param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Annual CO2 emissions (per capita):nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity:nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Year:qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6CAF11D-0338-47CD-819C-1AD9423119DE}' />
    </window>
    <window class='worksheet' name='by_fuel_co2_emi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:fuel_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[:Measure Names]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Year (03. CO2-by-source.csv):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:fuel_type:nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:Annual CO2 emissions from cement (zero filled):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{760B1574-414F-4EA7-92B8-03286EAF789F}' />
    </window>
    <window class='worksheet' name='new_by_type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Entity (04. new-vehicles-type-share.csv):nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:battery_electric_share:ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:diesel_gas_share:ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:number:ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:type:nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year (04. new-vehicles-type-area.csv):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year (04. new-vehicles-type-share.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3656F037-53BC-48C0-AA10-195FCDEE427E}' />
    </window>
    <window class='worksheet' name='policies_by_year+'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Year (timelineyears.txt):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Year (timelineyears.txt):ok]'>
          <bucket-selection>
            <bucket>2016</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C29734B-FF31-4FBA-B79F-FF3CA2D1474B}' />
    </window>
    <window class='worksheet' name='emiss_car_type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:emission (05. dutchemissions_passcars.csv):nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:emission (dutchemissions_passcars.csv):nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:emission (dutchemissions_passcars.csv):ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas (05. dutchemissions_passcars.csv):nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (05. dutchemissions_passcars.csv):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (dutchemissions_passcars.csv):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:year (dutchemissions_passcars.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D1EF6D9-7B16-4B3B-BC34-51532710AA04}' />
    </window>
    <window class='worksheet' name='emiss_car_typeCO2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[sum:emission (05. dutchemissions_passcars.csv):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:emission (05. dutchemissions_passcars.csv):ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:emission (dutchemissions_passcars.csv):nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:emission (dutchemissions_passcars.csv):ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:gas:nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (05. dutchemissions_passcars.csv):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:year (dutchemissions_passcars.csv):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:year (dutchemissions_passcars.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5326F39F-74BF-4C78-8977-97D7CA9FAF99}' />
    </window>
    <window class='worksheet' name='air_quality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[mn:Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[mn:Date:ok]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[none:Pollutant:nk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[tyr:Year (timelineyears.txt):qk]</field>
            <field>[federated.01qbnb61a672gp1ebqmcl0ed2dtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E6BB8B8-576F-4801-84AE-F8FC4D12A70F}' />
    </window>
    <window class='dashboard' name='atm_global_CO2'>
      <viewpoints>
        <viewpoint name='Atm_global_CO2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{5834BCF9-8EF5-4F50-ACB3-4A5EBCCFC0BB}' />
    </window>
    <window class='dashboard' maximized='true' name='Presentation'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{7F8FFD85-D3CF-42D4-9D24-68B32C9037FF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Atm_global_CO2' width='192'>
      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
      9f8BD4O6s2ZsFbMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Presentation' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='air_quality' width='192'>
      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
      8v8BNx07Yi1vOK0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='atm_global_CO2' width='192'>
      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
      Mjbcx8K69P8P+3n5ijYEdFIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='by_fuel_co2_emi' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='emiss_car_type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='emiss_car_typeCO2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='new_by_type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='per_capita_co2_emi' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='policies_by_year+' width='192'>
      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
      xzSeuyf+Wf4/j+BD4iIdGIwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
